{"version":3,"sources":["Table.js","App.js","index.js"],"names":["Table","rows","columns","pagination","selected","setSelected","selection","visibleSelection","rowsPerPageOptions","useState","page","setPage","pageSize","setPageSize","style","height","width","selectionModel","checkboxSelection","onPageSizeChange","onPageChange","onSelectionModelChange","length","slice","field","headerName","type","description","sortable","valueGetter","params","getValue","id","lastName","firstName","age","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0JAGe,SAASA,EAAT,GASX,IARFC,EAQC,EARDA,KACAC,EAOC,EAPDA,QACAC,EAMC,EANDA,WACAC,EAKC,EALDA,SACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,iBAEC,IADDC,0BACC,MADoB,CAAC,EAAG,GAAI,IAC5B,EACD,EAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAASD,EAAmB,IAA5D,mBAAOI,EAAP,KAAiBC,EAAjB,KAEA,OACE,qBAAKC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,QAAlC,SACE,cAAC,IAAD,CACEf,KAAMA,EACNC,QAASA,EACTe,eAAgBb,EAChBQ,SAAUA,EACVJ,mBAAoBA,EACpBU,kBAAmBZ,EACnBH,WAAYA,EACZO,KAAMA,EACNS,iBAAkB,YAAmB,IAAhBP,EAAe,EAAfA,SACnBC,EAAYD,GACZP,EAAY,KAEde,aAAc,YAAe,IAAZV,EAAW,EAAXA,KACfC,EAAQD,GACRL,EAAY,KAEdgB,uBAAwB,YAAyB,IAAtBJ,EAAqB,EAArBA,eAErBV,GAAoBU,EAAeK,SAAWrB,EAAKqB,OACrDjB,EACEY,EAAeM,MAAMb,EAAOE,EAAUF,EAAOE,EAAWA,IAM5DP,EAAYY,QC1CtB,IAAMf,EAAU,CACd,CAAEsB,MAAO,KAAMC,WAAY,KAAMT,MAAO,IACxC,CAAEQ,MAAO,YAAaC,WAAY,aAAcT,MAAO,KACvD,CAAEQ,MAAO,WAAYC,WAAY,YAAaT,MAAO,KACrD,CACEQ,MAAO,MACPC,WAAY,MACZC,KAAM,SACNV,MAAO,KAET,CACEQ,MAAO,WACPC,WAAY,YACZE,YAAa,sDACbC,UAAU,EACVZ,MAAO,IACPa,YAAa,SAACC,GAAD,gBACRA,EAAOC,SAASD,EAAOE,GAAI,cAAgB,GADnC,YAETF,EAAOC,SAASD,EAAOE,GAAI,aAAe,OAK5C/B,EAAO,CACX,CAAE+B,GAAI,EAAGC,SAAU,OAAQC,UAAW,MAAOC,IAAK,IAClD,CAAEH,GAAI,EAAGC,SAAU,YAAaC,UAAW,SAAUC,IAAK,IAC1D,CAAEH,GAAI,EAAGC,SAAU,YAAaC,UAAW,QAASC,IAAK,IACzD,CAAEH,GAAI,EAAGC,SAAU,QAASC,UAAW,OAAQC,IAAK,IACpD,CAAEH,GAAI,EAAGC,SAAU,YAAaC,UAAW,WAAYC,IAAK,MAC5D,CAAEH,GAAI,EAAGC,SAAU,aAAcC,UAAW,KAAMC,IAAK,KACvD,CAAEH,GAAI,EAAGC,SAAU,WAAYC,UAAW,UAAWC,IAAK,IAC1D,CAAEH,GAAI,EAAGC,SAAU,UAAWC,UAAW,UAAWC,IAAK,IACzD,CAAEH,GAAI,EAAGC,SAAU,QAASC,UAAW,SAAUC,IAAK,KAGzC,SAASC,IACtB,MAAgC3B,mBAAS,IAAzC,mBAAOL,EAAP,KAAiBC,EAAjB,KAEA,OACE,cAACL,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTE,SAAUA,EACVG,kBAAgB,EAChBD,WAAS,EACTD,YAAaA,EACbF,YAAY,EACZK,mBAAoB,CAAC,EAAG,EAAG,KC7CjC,IAAM6B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACL,EAAD,MAEFC,K","file":"static/js/main.2f6a15a3.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { XGrid } from \"@material-ui/x-grid\";\r\n\r\nexport default function Table({\r\n  rows,\r\n  columns,\r\n  pagination,\r\n  selected,\r\n  setSelected,\r\n  selection,\r\n  visibleSelection,\r\n  rowsPerPageOptions = [5, 10, 15]\r\n}) {\r\n  const [page, setPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(rowsPerPageOptions[0]);\r\n\r\n  return (\r\n    <div style={{ height: 400, width: \"100%\" }}>\r\n      <XGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        selectionModel={selected}\r\n        pageSize={pageSize}\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        checkboxSelection={selection}\r\n        pagination={pagination}\r\n        page={page}\r\n        onPageSizeChange={({ pageSize }) => {\r\n          setPageSize(pageSize);\r\n          setSelected([]);\r\n        }}\r\n        onPageChange={({ page }) => {\r\n          setPage(page);\r\n          setSelected([]);\r\n        }}\r\n        onSelectionModelChange={({ selectionModel }) => {\r\n          //if visibleSelection props is defined and select all checkbox is checked\r\n          if (visibleSelection && selectionModel.length === rows.length) {\r\n            setSelected(\r\n              selectionModel.slice(page * pageSize, page * pageSize + pageSize)\r\n            );\r\n            return;\r\n          }\r\n\r\n          //else, i.e if row is selected one by one\r\n          setSelected(selectionModel);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport Table from \"./Table\";\r\n\r\nconst columns = [\r\n  { field: \"id\", headerName: \"ID\", width: 90 },\r\n  { field: \"firstName\", headerName: \"First name\", width: 150 },\r\n  { field: \"lastName\", headerName: \"Last name\", width: 150 },\r\n  {\r\n    field: \"age\",\r\n    headerName: \"Age\",\r\n    type: \"number\",\r\n    width: 110\r\n  },\r\n  {\r\n    field: \"fullName\",\r\n    headerName: \"Full name\",\r\n    description: \"This column has a value getter and is not sortable.\",\r\n    sortable: false,\r\n    width: 160,\r\n    valueGetter: (params) =>\r\n      `${params.getValue(params.id, \"firstName\") || \"\"} ${\r\n        params.getValue(params.id, \"lastName\") || \"\"\r\n      }`\r\n  }\r\n];\r\n\r\nconst rows = [\r\n  { id: 1, lastName: \"Snow\", firstName: \"Jon\", age: 35 },\r\n  { id: 2, lastName: \"Lannister\", firstName: \"Cersei\", age: 42 },\r\n  { id: 3, lastName: \"Lannister\", firstName: \"Jaime\", age: 45 },\r\n  { id: 4, lastName: \"Stark\", firstName: \"Arya\", age: 16 },\r\n  { id: 5, lastName: \"Targaryen\", firstName: \"Daenerys\", age: null },\r\n  { id: 6, lastName: \"Melisandre\", firstName: null, age: 150 },\r\n  { id: 7, lastName: \"Clifford\", firstName: \"Ferrara\", age: 44 },\r\n  { id: 8, lastName: \"Frances\", firstName: \"Rossini\", age: 36 },\r\n  { id: 9, lastName: \"Roxie\", firstName: \"Harvey\", age: 65 }\r\n];\r\n\r\nexport default function App() {\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  return (\r\n    <Table\r\n      rows={rows}\r\n      columns={columns}\r\n      selected={selected}\r\n      visibleSelection\r\n      selection\r\n      setSelected={setSelected}\r\n      pagination={true}\r\n      rowsPerPageOptions={[3, 6, 9]}\r\n    />\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}